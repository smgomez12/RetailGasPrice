library(fpp)
library(fpp2)
library(TTR)
op <- read.csv("~/Downloads/Oil_price_1.csv")
attributes(op) #Show type
summary(op$PRICE) #mean, min etc
op_ts = ts(op$PRICE, start = 2000, end = c(2017,12), frequency = 12)
plot(op_ts)
Acf(op_ts) #Correlogram 
#mean_f
mean_forecast = meanf(op_ts, h=4, level = c(20,40)) #mean forecast, and level gives confidence interval
plot(mean_forecast)
lines(mean_forecast$fitted, col="red") #plotting the graph over the original graph, we used $fitted to get the graph
accuracy(mean_forecast)
#naive 
naive_forecast = naive(op_ts, 12)
lines(naive_forecast$fitted, col="green")
accuracy(naive_forecast)
#snaive
snaive_forecast = snaive(op_ts, 12)
lines(snaive_forecast$fitted, col="blue")
accuracy(snaive_forecast)
#Moving Avg
ma4_forecast = ma(op_ts,order=4)
ma12_forecast = ma(op_ts,order=12)
ma24_forecast = ma(op_ts,order=24) 
plot(op_ts)
lines(ma4_forecast, col="blue")
lines(ma12_forecast, col="green")
lines(ma24_forecast, col="yellow")
#ets
ets_forecast = ets(op_ts, h=4)
forecast_ets = forecast.ets(ets_forecast,h=4)
plot(forecast_ets)
#holt_winters
hw_forecast = HoltWinters(op_ts)
plot(hw_forecast)
#decomp
decomp=stl(op_ts,s.window = "periodic")
#seasonal adjustment
SA_ts = seasadj(decomp)
#Multiple regression using Car Registration data, Electric Vehicle Sales, and Gas Consumption Data
view(op_mr)
cor(op_mr)
op_mr_log <- data.frame(Price=op_mr$Price, log.reg=log(op_mr$Registration+1),log.es=log(op_mr$Electric_Sales+1),log.cons=log(op_mr$Consumption+1))
pairs(op_mr_log[,1:4])
mfit <- step(lm(Price ~ log.reg + log.es + log.cons,data=op_mr_log))
summary(mfit)
plot(fitted(mfit), op_mr_log$Price, ylab="Price", xlab="Predicted Price")
